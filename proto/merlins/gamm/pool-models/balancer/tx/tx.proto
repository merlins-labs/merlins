syntax = "proto3";
package merlins.gamm.poolmodels.balancer.v1beta1;

import "gogoproto/gogo.proto";
import "amino/amino.proto";
import "merlins/gamm/pool-models/balancer/balancerPool.proto";
import "cosmos/base/v1beta1/coin.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/osmosis-labs/osmosis/v17/x/gamm/pool-models/balancer";

service Msg {
  rpc CreateBalancerPool(MsgCreateBalancerPool)
      returns (MsgCreateBalancerPoolResponse);
}

// ===================== MsgCreatePool
message MsgCreateBalancerPool {
  option (amino.name) = "merlins/gamm/create-balancer-pool";

  string sender = 1 [ (gogoproto.moretags) = "yaml:\"sender\"" ];

  merlins.gamm.v1beta1.PoolParams pool_params = 2
      [ (gogoproto.moretags) = "yaml:\"pool_params\"" ];

  repeated merlins.gamm.v1beta1.PoolAsset pool_assets = 3
      [ (gogoproto.nullable) = false ];

  string future_pool_governor = 4
      [ (gogoproto.moretags) = "yaml:\"future_pool_governor\"" ];
}

// Returns the poolID
message MsgCreateBalancerPoolResponse {
  uint64 pool_id = 1 [ (gogoproto.customname) = "PoolID" ];
}
